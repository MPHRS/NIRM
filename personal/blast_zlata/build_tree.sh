#!/bin/bash

set -e

INPUT_DIR="orthogroup_fastas"
ALIGN_DIR="aligned"
TRIM_DIR="trimmed"
mkdir -p "$ALIGN_DIR" "$TRIM_DIR"

echo "üîÑ –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ MAFFT..."
for file in $INPUT_DIR/*.faa; do
    base=$(basename "$file" .faa)
    mafft --auto "$file" > "$ALIGN_DIR/$base.aln.faa"
done

echo "‚úÇÔ∏è –¢—Ä–∏–º–º–∏–Ω–≥ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–π (trimAl)..."
for file in $ALIGN_DIR/*.aln.faa; do
    base=$(basename "$file" .aln.faa)
    trimal -in "$file" -out "$TRIM_DIR/$base.trim.faa" -automated1
done

echo "üîó –ö–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è..."
python3 <<EOF
from Bio import SeqIO
import os
from collections import defaultdict

trim_dir = "$TRIM_DIR"
out_file = "concatenated_alignment.faa"

genomes = set()
seqs_per_genome = defaultdict(list)

# –ß—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–π –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ –≥–µ–Ω–æ–º–∞–º
for filename in sorted(os.listdir(trim_dir)):
    if filename.endswith(".trim.faa"):
        records = list(SeqIO.parse(os.path.join(trim_dir, filename), "fasta"))
        id_map = {r.id.split('.')[0]: r for r in records}  # Genome ID = –¥–æ –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏
        for genome in id_map:
            genomes.add(genome)
        for g in genomes:
            if g in id_map:
                seqs_per_genome[g].append(str(id_map[g].seq))
            else:
                # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø gap-–∞–º–∏
                length = len(records[0].seq)
                seqs_per_genome[g].append('-' * length)

# –ó–∞–ø–∏—Å—å –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
with open(out_file, "w") as out:
    for genome, chunks in seqs_per_genome.items():
        out.write(f">{genome}\n{''.join(chunks)}\n")
EOF

echo "üå≥ –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–µ—Ä–µ–≤–∞ (FastTree)..."
FastTree -lg concatenated_alignment.faa > tree.nwk

echo "üéâ –ì–æ—Ç–æ–≤–æ! –î–µ—Ä–µ–≤–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ tree.nwk"

